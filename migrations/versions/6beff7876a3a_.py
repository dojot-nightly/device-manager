"""empty message

Revision ID: 6beff7876a3a
Revises:
Create Date: 2018-04-16 15:34:37.785153

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6beff7876a3a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('devices',
        sa.Column('id', sa.String(length=8), nullable=False),
        sa.Column('label', sa.String(length=128), nullable=False),
        sa.Column('created', sa.DateTime(), nullable=True),
        sa.Column('updated', sa.DateTime(), nullable=True),
        sa.Column('persistence', sa.String(length=128), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id')
    )
    op.create_table('templates',
        sa.Column('id', sa.Integer(), sa.Sequence('template_id'), nullable=False),
        sa.Column('label', sa.String(length=128), nullable=False),
        sa.Column('created', sa.DateTime(), nullable=True),
        sa.Column('updated', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.execute(sa.schema.CreateSequence(sa.Sequence('template_id')))
    op.create_table('attrs',
        sa.Column('id', sa.Integer(), sa.Sequence('attr_id'), nullable=False),
        sa.Column('label', sa.String(length=128), nullable=False),
        sa.Column('created', sa.DateTime(), nullable=True),
        sa.Column('updated', sa.DateTime(), nullable=True),
        sa.Column('type', sa.String(length=32), nullable=False),
        sa.Column('value_type', sa.String(length=32), nullable=False),
        sa.Column('static_value', sa.String(length=128), nullable=True),
        sa.Column('template_id', sa.Integer(), nullable=True),
        sa.Column('parent_id', sa.Integer(), nullable=True),
        sa.CheckConstraint('((template_id IS NULL) AND NOT (parent_id IS NULL)) OR (NOT (template_id IS NULL) AND (parent_id IS NULL))'),
        sa.ForeignKeyConstraint(['parent_id'], ['attrs.id'], ),
        sa.ForeignKeyConstraint(['template_id'], ['templates.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('template_id', 'type', 'label')
    )
    op.execute(sa.schema.CreateSequence(sa.Sequence('attr_id')))
    op.create_table('device_template',
        sa.Column('device_id', sa.String(length=8), nullable=False),
        sa.Column('template_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
        sa.ForeignKeyConstraint(['template_id'], ['templates.id'], ),
        sa.PrimaryKeyConstraint('device_id', 'template_id')
    )
    op.create_index(op.f('ix_device_template_device_id'), 'device_template', ['device_id'], unique=False)
    op.create_index(op.f('ix_device_template_template_id'), 'device_template', ['template_id'], unique=False)
    op.create_table('overrides',
        sa.Column('id', sa.Integer(), sa.Sequence('override_id'), nullable=False),
        sa.Column('did', sa.String(length=8), nullable=True),
        sa.Column('aid', sa.Integer(), nullable=True),
        sa.Column('static_value', sa.String(length=128), nullable=True),
        sa.ForeignKeyConstraint(['aid'], ['attrs.id'], ),
        sa.ForeignKeyConstraint(['did'], ['devices.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.execute(sa.schema.CreateSequence(sa.Sequence('override_id')))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('overrides')
    op.drop_index(op.f('ix_device_template_template_id'), table_name='device_template')
    op.drop_index(op.f('ix_device_template_device_id'), table_name='device_template')
    op.drop_table('device_template')
    op.drop_table('attrs')
    op.drop_table('templates')
    op.drop_table('devices')
    # ### end Alembic commands ###
